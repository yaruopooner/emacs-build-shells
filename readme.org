# -*- mode: org ; coding: utf-8-unix -*-
# last updated : 2017/01/07.00:32:33


#+TITLE:     Emacs Build Shells
#+AUTHOR:    yaruopooner
#+EMAIL:     [https://github.com/yaruopooner]
#+OPTIONS:   author:nil timestamp:t |:t \n:t ^:nil


* What's New?
** 2017-01-07 was released
   - emacsリポジトリからのビルド対応

** 2016-10-23 was released
   - 初回リリース

* できること
  以下を一括して行います
  - Step-1
   - MSYS2ダウンロード
   - MSYS2アーカイブ展開
   - MSYS2インストール
  - Step-2
   - MSYS2パッケージアップデート
   - Emacsソース取得
     - Emacsアーカイブ(default)
       - Emacsアーカイブ：ダウンロード
       - Emacsアーカイブ：展開
     - Emacsレポジトリ
       - Emacsレポジトリ：クローン
       - Emacsレポジトリ：チェックアウト
   - IMEパッチダウンロード
   - Emacsパッチ適用
   - Emacsビルド
   - Emacs依存DLL解析
   - Emacsポータブル出力

* ビルドされるEmacsバイナリ
  デフォルトはMinGW64 が起動し x86_64 で生成される
  MinGW32 で起動すると x86 で生成される

* 動作環境
  ↓でテスト
  Windows 10/7 x86_64
  Cygwin x86_64 2.1.0(0.287/5/3) 2015-07-14 21:28

* 準備
  #+begin_src shell-script
    $ git clone https://github.com/yaruopooner/emacs-build-shells.git
  #+end_src
  またはzipをダウンロードして展開

* Step-1
  MSYS2導入
  すでに導入済みの場合は =Step-2= へ
  ただしパッケージが更新されるので自分のMSYS2環境が更新される可能性がある
  これを避けたい場合は =Step-1= から行う

  以下の手順を行うと自動でMSYS2をダウンロード・展開・起動される
  Cygwin か PowerShell どちらからでもインストール可能
  MSYS2はポータブル版を使用しているので環境を汚さない

  デフォルトでは MinGW64 が起動する
  MinGW32 を起動させるには下記のオプションで設定可能

** オプション
   =install-msys2.XXX.options= の記述を編集することにより
   ダウンロードするアーカイブ、起動する MinGW64/32 の設定が可能。
   =install-msys2.XXX.options= が存在しない場合デフォルト値が使用される

** Cygwin またはその他のbashシェルからのインストール
   #+begin_src shell-script
     $ cd emacs-build-shells
     $ ./install-msys2.sh
   #+end_src
   
** PowerShell からインストール
   実行には =PowerShell 5= の環境が必要。(Windows10は最初から5だった気が)
   5未満の場合は以下からダウンロードしてインストール
   =PowerShell 5.0(Windows Management Framework 5.0)=
   https://www.microsoft.com/en-us/download/details.aspx?id=50395
   #+begin_src shell-script
     cd emacs-build-shells
     install-msys2.ps1
   #+end_src
   または
   エクスプローラーから =install-msys2.ps1= を実行する

** 自前でダウンロード＆インストール
   http://jaist.dl.sourceforge.net/project/msys2/Base/x86_64/
   から自前でダウンロードして展開
   =build-shells=
   を
   =/msys64/tmp/=
   へコピーして完了

* Step-2
  MSYS2パッケージアップデートとEmacsビルド

  以下の手順を行うと
  MSYS2アップデートとEmacsアーカイブ/IMEパッチのダウンロード・展開・パッチ適用・ビルドを行う
  =emacs/bin/*.exe= の実行に必要なDLLの依存解析を行い、必要なDLLがコピーされる
  
  設定変更を行うことによりEmacsアーカイブの代わりにEmacsレポジトリのクローン・チェックアウトに切り替え可能
  ※Emacsのレポジトリは大容量のためclone完了までかなりの時間がかかる

** オプション
   =setup-msys2.options= の記述を編集することにより
   インストールするパッケージの追加設定が可能

   =build-emacs.options= の記述を編集することにより
   ダウンロードするアーカイブ、レポジトリ、ブランチ名、パッチ、CFLAGS、configure、DLLなどの追加設定が可能

   =setup-msys2.options= =build-emacs.options= が存在しない場合デフォルト値が使用される

   プロキシ経由している場合は =start.sh= 実行前にシェル上で↓を行ってから実行
   #+begin_src shell-script
     $ export http_proxy="url:port"
     $ export https_proxy="url:port"
   #+end_src
   ※ =start.options= に記述でもOK

** 実行
   =install-msys2= で起動された MinGW64/32 上で作業ディレクトリへ移動し =start.sh= を実行

   パッケージやビルド構成を変更する場合は =start.sh= 実行前に
   =/tmp/build-shells/setup-msys2.options=
   =/tmp/build-shells/build-emacs.options=
   を編集する必要がある
   ビルドを実行してしまった場合は、編集後に再実行でOK

   #+begin_src shell-script
     $ cd /tmp/build-shells
     $ ./start.sh
   #+end_src
  
   完了後にログが表示される
   ※ログファイルとして残る

   ビルドされたEmacsは↓に置かれるので =emacs-XX.X= ごと自分の環境へ移動して利用
   =/msys64/tmp/build-shells/build/XX/emacs-XX.X=

* 参考文献
  http://cha.la.coocan.jp/doc/NTEmacsBuild251.html#sec-7-2
  https://github.com/chuntaro/NTEmacs64
  https://gist.github.com/rzl24ozi/8c20b904c9f5e588ba99

